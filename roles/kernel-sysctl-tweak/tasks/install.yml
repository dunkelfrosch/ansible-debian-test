---

# ---------------------------------------------------------------------------------------------------------------------
# INJECT REQUIRED KERNEL MODULES
# ---------------------------------------------------------------------------------------------------------------------

- name: modprobe | add ip_conntrack kernel module
  modprobe:
    name: ip_conntrack
    state: present

# ---------------------------------------------------------------------------------------------------------------------
# KERNEL TUNING | CORE SECURITY
# ---------------------------------------------------------------------------------------------------------------------

# [000.1] increase size of file handles including inode cache
- name: sysctl | SET fs.file-max to [{{ file_max }}]
  sysctl:
    name: fs.file-max
    value: "{{ file_max }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [000.2] do less swapping (1/3)
- name: sysctl | SET vm.swappiness to [{{ swappiness }}]
  sysctl:
    name: vm.swappiness
    value: "{{ swappiness }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [000.3] do less swapping (2/3)
- name: sysctl | SET vm.dirty_ratio to [{{ dirty_ratio }}]
  sysctl:
    name: vm.dirty_ratio
    value: "{{ dirty_ratio }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [000.4] do less swapping (3/3)
- name: sysctl | SET vm.dirty_background_ratio to [{{ dirty_background_ratio }}]
  sysctl:
    name: vm.dirty_background_ratio
    value: "{{ dirty_background_ratio }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [000.5] prevent kernel NULL pointer dereference
- name: sysctl | SET vm.mmap_min_addr to [{{ mmap_min_addr }}]
  sysctl:
    name: vm.mmap_min_addr
    value: "{{ mmap_min_addr }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [000.6] sets the time before the kernel considers migrating a process to another core
- name: sysctl | SET kernel.sched_migration_cost_ns to [{{ sched_migration_cost_ns }}]
  sysctl:
    name: kernel.sched_migration_cost_ns
    value: "{{ sched_migration_cost_ns }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [000.7] guarding against malicious software attacks, activate address space layout randomization (ASLR)
- name: sysctl | SET kernel.randomize_va_space to [{{ randomize_va_space }}]
  sysctl:
    name: kernel.randomize_va_space
    value: "{{ randomize_va_space }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [000.8] hiding kernel pointers from unprivileged users
- name: sysctl | SET kernel.kptr_restrict to [{{ kptr_restrict }}]
  sysctl:
    name: kernel.kptr_restrict
    value: "{{ kptr_restrict }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [000.9] prevent unprivileged users from viewing dmesg command output
- name: sysctl | SET kernel.dmesg_restrict to [{{ dmesg_restrict }}]
  sysctl:
    name: kernel.dmesg_restrict
    value: "{{ dmesg_restrict }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [000.10] activate YAMA system-wide DAC security protections that are not handled by the core kernel itself
- name: sysctl | SET kernel.yama.ptrace_scope to [{{ ptrace_scope }}]
  sysctl:
    name: kernel.yama.ptrace_scope
    value: "{{ ptrace_scope }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# ---------------------------------------------------------------------------------------------------------------------
# GENERAL NETWORK SECURITY OPTIONS
# ---------------------------------------------------------------------------------------------------------------------

# [001.1] number of times SYNACKs for passive TCP connection
- name: sysctl | SET net.ipv4.tcp_synack_retries to [{{ tcp_synack_retries }}]
  sysctl:
    name: net.ipv4.tcp_synack_retries
    value: "{{ tcp_synack_retries }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [001.2] number of times SYNs for passive TCP connection
- name: sysctl | SET net.ipv4.tcp_syn_retries to [{{ tcp_syn_retries }}]
  sysctl:
    name: net.ipv4.tcp_syn_retries
    value: "{{ tcp_syn_retries }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [001.3] allowed local port range
- name: sysctl | SET net.ipv4.ip_local_port_range to [{{ ip_local_port_range }}]
  sysctl:
    name: net.ipv4.ip_local_port_range
    value: "{{ ip_local_port_range }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [001.4] protect against TCP Time-Wait
- name: sysctl | SET net.ipv4.tcp_rfc1337 to [{{ tcp_rfc1337 }}]
  sysctl:
    name: net.ipv4.tcp_rfc1337
    value: "{{ tcp_rfc1337 }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [001.5] control synCookies
- name: sysctl | SET net.ipv4.tcp_syncookies to [{{ tcp_syncookies }}]
  sysctl:
    name: net.ipv4.tcp_syncookies
    value: "{{ tcp_syncookies }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [001.6] decrease the time default value for tcp_fin_timeout connection
- name: sysctl | SET net.ipv4.tcp_fin_timeout to [{{ tcp_fin_timeout }}]
  sysctl:
    name: net.ipv4.tcp_fin_timeout
    value: "{{ tcp_fin_timeout }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [001.7] decrease the time default value for connections to keep alive (1/3)
- name: sysctl | SET net.ipv4.tcp_keepalive_time to [{{ tcp_keepalive_time }}]
  sysctl:
    name: net.ipv4.tcp_keepalive_time
    value: "{{ tcp_keepalive_time }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [001.8] decrease the time default value for connections to keep alive (2/3)
- name: sysctl | SET net.ipv4.tcp_keepalive_probes to [{{ tcp_keepalive_probes }}]
  sysctl:
    name: net.ipv4.tcp_keepalive_probes
    value: "{{ tcp_keepalive_probes }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [001.9] decrease the time default value for connections to keep alive (3/3)
- name: sysctl | SET net.ipv4.tcp_keepalive_intvl to [{{ tcp_keepalive_intvl }}]
  sysctl:
    name: net.ipv4.tcp_keepalive_intvl
    value: "{{ tcp_keepalive_intvl }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [001.10] mitigate TCP SYN Flood Attacks / decent DDoS attacks
- name: sysctl | SET net.netfilter.nf_conntrack_tcp_loose to [{{ nf_conntrack_tcp_loose }}]
  sysctl:
    name: net.netfilter.nf_conntrack_tcp_loose
    value: "{{ nf_conntrack_tcp_loose }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [001.11] tweak network settings for large number of concurrent clients
- name: sysctl | SET net.ipv4.tcp_max_orphans to [{{ tcp_max_orphans }}]
  sysctl:
    name: net.ipv4.tcp_max_orphans
    value: "{{ tcp_max_orphans }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# ---------------------------------------------------------------------------------------------------------------------
# GENERAL NETWORK TUNING OPTIONS
# ---------------------------------------------------------------------------------------------------------------------

# [002.1] default socket receive buffer
- name: sysctl | SET net.core.rmem_default to [{{ rmem_default }}]
  sysctl:
    name: net.core.rmem_default
    value: "{{ rmem_default }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.2] maximum socket receive buffer
- name: sysctl | SET net.core.rmem_max to [{{ rmem_max }}]
  sysctl:
    name: net.core.rmem_max
    value: "{{ rmem_max }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.3] default socket send buffer
- name: sysctl | SET net.core.wmem_default to [{{ wmem_default }}]
  sysctl:
    name: net.core.wmem_default
    value: "{{ wmem_default }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.4] maximum socket send buffer
- name: sysctl | SET net.core.wmem_max to [{{ wmem_max }}]
  sysctl:
    name: net.core.wmem_max
    value: "{{ wmem_max }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.5] increase number of incoming connections
- name: sysctl | SET net.core.somaxconn to [{{ somaxconn }}]
  sysctl:
    name: net.core.somaxconn
    value: "{{ somaxconn }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.6] increase number of incoming connections backlog
- name: sysctl | SET net.core.netdev_max_backlog to [{{ netdev_max_backlog }}]
  sysctl:
    name: net.core.netdev_max_backlog
    value: "{{ netdev_max_backlog }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.7] increase number of incoming connections backlog (wall against synFlood DOS attack)
- name: sysctl | SET net.ipv4.tcp_max_syn_backlog to [{{ tcp_max_syn_backlog }}]
  sysctl:
    name: net.ipv4.tcp_max_syn_backlog
    value: "{{ tcp_max_syn_backlog }}"
    state: present

# [002.8] increase the maximum amount of option memory buffers
- name: sysctl | SET net.core.optmem_max to [{{ optmem_max }}]
  sysctl:
    name: net.core.optmem_max
    value: "{{ optmem_max }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.9] increase the maximum total buffer-space allocatable (his is measured in units of pages (4096 bytes) [1/2]
- name: sysctl | SET net.ipv4.tcp_mem to [{{ tcp_mem }}]
  sysctl:
    name: net.ipv4.tcp_mem
    value: "{{ tcp_mem }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.10] increase the maximum total buffer-space allocatable (his is measured in units of pages (4096 bytes) [2/2]
- name: sysctl | SET net.ipv4.udp_mem to [{{ udp_mem }}]
  sysctl:
    name: net.ipv4.udp_mem
    value: "{{ udp_mem }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.11] increase the read-buffer space allocatable (1/2)
- name: sysctl | SET net.ipv4.tcp_rmem to [{{ tcp_rmem }}]
  sysctl:
    name: net.ipv4.tcp_rmem
    value: "{{ tcp_rmem }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.12] increase the read-buffer space allocatable (2/2)
- name: sysctl | SET net.ipv4.udp_rmem_min to [{{ udp_rmem_min }}]
  sysctl:
    name: net.ipv4.udp_rmem_min
    value: "{{ udp_rmem_min }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.13] increase the write-buffer-space allocatable (1/2)
- name: sysctl | SET net.ipv4.tcp_wmem to [{{ tcp_wmem }}]
  sysctl:
    name: net.ipv4.tcp_wmem
    value: "{{ tcp_wmem }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.14] increase the write-buffer-space allocatable (2/2)
- name: sysctl | SET net.ipv4.udp_wmem_min to [{{ udp_wmem_min }}]
  sysctl:
    name: net.ipv4.udp_wmem_min
    value: "{{ udp_wmem_min }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.15] increase the tcp-time-wait buckets pool size to prevent simple DDoS attacks (1/3)
- name: sysctl | SET net.ipv4.tcp_max_tw_buckets to [{{ tcp_max_tw_buckets }}]
  sysctl:
    name: net.ipv4.tcp_max_tw_buckets
    value: "{{ tcp_max_tw_buckets }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.16] increase the tcp-time-wait buckets pool size to prevent simple DDoS attacks (2/3)
- name: sysctl | SET net.ipv4.tcp_tw_recycle to [{{ tcp_tw_recycle }}]
  sysctl:
    name: net.ipv4.tcp_tw_recycle
    value: "{{ tcp_tw_recycle }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"

# [002.17] increase the tcp-time-wait buckets pool size to prevent simple DDoS attacks (3/3)
- name: sysctl | SET net.ipv4.tcp_tw_reuse to [{{ tcp_tw_reuse }}]
  sysctl:
    name: net.ipv4.tcp_tw_reuse
    value: "{{ tcp_tw_reuse }}"
    state: present
    reload: "{{ force_sysctl_reload | default('no') }}"
