---

# ---------------------------------------------------------------------------------------------------------------------
# INJECT REQUIRED KERNEL MODULES
# ---------------------------------------------------------------------------------------------------------------------

- set_fact:
    travis_running: "{{ lookup('env','TRAVIS') | bool }}"

- shell: echo "I've travis running ('{{ travis_running }}') and am not afraid to use it!"
  when: travis_running is defined

- name: modprobe | add ip_conntrack kernel module
  modprobe:
    name: ip_conntrack
    state: present

# ---------------------------------------------------------------------------------------------------------------------
# KERNEL TUNING | CORE SECURITY
# ---------------------------------------------------------------------------------------------------------------------

# [000.1] increase size of file handles and inode cache
- name: sysctl | SET fs.file-max
  sysctl:
    name: fs.file-max
    value: "{{ file_max }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] do less swapping (1/3)
- name: sysctl | SET vm.swappiness
  sysctl:
    name: vm.swappiness
    value: "{{ swappiness }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] do less swapping (2/3)
- name: sysctl | SET vm.dirty_ratio
  sysctl:
    name: vm.dirty_ratio
    value: "{{ dirty_ratio }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] do less swapping (3/3)
- name: sysctl | SET vm.dirty_background_ratio
  sysctl:
    name: vm.dirty_background_ratio
    value: "{{ dirty_background_ratio }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] prevent kernel NULL pointer dereference
- name: sysctl | SET vm.mmap_min_addr
  sysctl:
    name: vm.mmap_min_addr
    value: "{{ mmap_min_addr }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] sets the time before the kernel considers migrating a process to another core
- name: sysctl | SET kernel.sched_migration_cost_ns
  sysctl:
    name: kernel.sched_migration_cost_ns
    value: "{{ sched_migration_cost_ns }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] guarding against malicious software attacks, activate address space layout randomization (ASLR)
- name: sysctl | SET kernel.randomize_va_space
  sysctl:
    name: kernel.randomize_va_space
    value: "{{ randomize_va_space }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] hiding kernel pointers from unprivileged users
- name: sysctl | SET kernel.kptr_restrict
  sysctl:
    name: kernel.kptr_restrict
    value: "{{ kptr_restrict }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] prevent unprivileged users from viewing dmesg command output
- name: sysctl | SET kernel.dmesg_restrict
  sysctl:
    name: kernel.dmesg_restrict
    value: "{{ dmesg_restrict }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] activate YAMA system-wide DAC security protections that are not handled by the core kernel itself
- name: sysctl | SET kernel.yama.ptrace_scope
  sysctl:
    name: kernel.yama.ptrace_scope
    value: "{{ ptrace_scope }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# ---------------------------------------------------------------------------------------------------------------------
# GENERAL NETWORK SECURITY OPTIONS
# ---------------------------------------------------------------------------------------------------------------------

# [000.1] number of times SYNACKs for passive TCP connection
- name: sysctl | SET net.ipv4.tcp_synack_retries
  sysctl:
    name: net.ipv4.tcp_synack_retries
    value: "{{ tcp_synack_retries }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] number of times SYNs for passive TCP connection
- name: sysctl | SET net.ipv4.tcp_syn_retries
  sysctl:
    name: net.ipv4.tcp_syn_retries
    value: "{{ tcp_syn_retries }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] allowed local port range
- name: sysctl | SET net.ipv4.ip_local_port_range
  sysctl:
    name: net.ipv4.ip_local_port_range
    value: "{{ ip_local_port_range }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] protect against TCP Time-Wait
- name: sysctl | SET net.ipv4.tcp_rfc1337
  sysctl:
    name: net.ipv4.tcp_rfc1337
    value: "{{ tcp_rfc1337 }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] control synCookies
- name: sysctl | SET net.ipv4.tcp_syncookies
  sysctl:
    name: net.ipv4.tcp_syncookies
    value: "{{ tcp_syncookies }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] decrease the time default value for tcp_fin_timeout connection
- name: sysctl | SET net.ipv4.tcp_fin_timeout
  sysctl:
    name: net.ipv4.tcp_fin_timeout
    value: "{{ tcp_fin_timeout }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] decrease the time default value for connections to keep alive (1/3)
- name: sysctl | SET net.ipv4.tcp_keepalive_time
  sysctl:
    name: net.ipv4.tcp_keepalive_time
    value: "{{ tcp_keepalive_time }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] decrease the time default value for connections to keep alive (2/3)
- name: sysctl | SET net.ipv4.tcp_keepalive_probes
  sysctl:
    name: net.ipv4.tcp_keepalive_probes
    value: "{{ tcp_keepalive_probes }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] decrease the time default value for connections to keep alive (3/3)
- name: sysctl | SET net.ipv4.tcp_keepalive_intvl
  sysctl:
    name: net.ipv4.tcp_keepalive_intvl
    value: "{{ tcp_keepalive_intvl }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] mitigate TCP SYN Flood Attacks / decent DDoS attacks
- name: sysctl | SET net.netfilter.nf_conntrack_tcp_loose
  sysctl:
    name: net.netfilter.nf_conntrack_tcp_loose
    value: "{{ nf_conntrack_tcp_loose }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] tweak network settings for large number of concurrent clients
- name: sysctl | SET net.ipv4.tcp_max_orphans
  sysctl:
    name: net.ipv4.tcp_max_orphans
    value: "{{ tcp_max_orphans }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# ---------------------------------------------------------------------------------------------------------------------
# GENERAL NETWORK TUNING OPTIONS
# ---------------------------------------------------------------------------------------------------------------------

# [000.1] default socket receive buffer
- name: sysctl | SET net.core.rmem_default
  sysctl:
    name: net.core.rmem_default
    value: "{{ rmem_default }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] maximum socket receive buffer
- name: sysctl | SET net.core.rmem_max
  sysctl:
    name: net.core.rmem_max
    value: "{{ rmem_max }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] default socket send buffer
- name: sysctl | SET net.core.wmem_default
  sysctl:
    name: net.core.wmem_default
    value: "{{ wmem_default }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] maximum socket send buffer
- name: sysctl | SET net.core.wmem_max
  sysctl:
    name: net.core.wmem_max
    value: "{{ wmem_max }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase number of incoming connections
- name: sysctl | SET net.core.somaxconn
  sysctl:
    name: net.core.somaxconn
    value: "{{ somaxconn }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase number of incoming connections backlog
- name: sysctl | SET net.core.netdev_max_backlog
  sysctl:
    name: net.core.netdev_max_backlog
    value: "{{ netdev_max_backlog }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase number of incoming connections backlog (wall against synFlood DOS attack)
- name: sysctl | SET net.ipv4.tcp_max_syn_backlog
  sysctl:
    name: net.ipv4.tcp_max_syn_backlog
    value: "{{ tcp_max_syn_backlog }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase the maximum amount of option memory buffers
- name: sysctl | SET net.core.optmem_max
  sysctl:
    name: net.core.optmem_max
    value: "{{ optmem_max }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase the maximum total buffer-space allocatable (his is measured in units of pages (4096 bytes) [1/2]
- name: sysctl | SET net.ipv4.tcp_mem
  sysctl:
    name: net.ipv4.tcp_mem
    value: "{{ tcp_mem }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase the maximum total buffer-space allocatable (his is measured in units of pages (4096 bytes) [2/2]
- name: sysctl | SET net.ipv4.udp_mem
  sysctl:
    name: net.ipv4.udp_mem
    value: "{{ udp_mem }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase the read-buffer space allocatable (1/2)
- name: sysctl | SET net.ipv4.tcp_rmem
  sysctl:
    name: net.ipv4.tcp_rmem
    value: "{{ tcp_rmem }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase the read-buffer space allocatable (2/2)
- name: sysctl | SET net.ipv4.udp_rmem_min
  sysctl:
    name: net.ipv4.udp_rmem_min
    value: "{{ udp_rmem_min }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase the write-buffer-space allocatable (1/2)
- name: sysctl | SET net.ipv4.tcp_wmem
  sysctl:
    name: net.ipv4.tcp_wmem
    value: "{{ tcp_wmem }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase the write-buffer-space allocatable (2/2)
- name: sysctl | SET net.ipv4.udp_wmem_min
  sysctl:
    name: net.ipv4.udp_wmem_min
    value: "{{ udp_wmem_min }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase the tcp-time-wait buckets pool size to prevent simple DDoS attacks (1/3)
- name: sysctl | SET net.ipv4.tcp_max_tw_buckets
  sysctl:
    name: net.ipv4.tcp_max_tw_buckets
    value: "{{ tcp_max_tw_buckets }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase the tcp-time-wait buckets pool size to prevent simple DDoS attacks (2/3)
- name: sysctl | SET net.ipv4.tcp_tw_recycle
  sysctl:
    name: net.ipv4.tcp_tw_recycle
    value: "{{ tcp_tw_recycle }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes

# [000.1] increase the tcp-time-wait buckets pool size to prevent simple DDoS attacks (3/3)
- name: sysctl | SET net.ipv4.tcp_tw_reuse
  sysctl:
    name: net.ipv4.tcp_tw_reuse
    value: "{{ tcp_tw_reuse }}"
    state: present
    reload: "{{ travis_running | default('yes') }}"
  become: yes
