sudo: required

env:
  - DOCKER_CMD_PRIV_OPT="--privileged --cap-add=ALL -v /tmp:/tmp -v /sys/fs/cgroup:/sys/fs/cgroup:ro"

language: python

services:
  - docker

env:
  matrix:
    ###
    ### Debian stretch
    ###
    # single problem roles (interop)
    - single=0 random=0 dist=debian-interop

before_script:
  # Run it multiple times until it succeeds. This is to prevent errors that occur due to
  # network timeouts between travis-ci
  - max=100; i=0; while [ $i -lt $max ]; do if docker build -t ansible-debian .; then break; else i=$((i+1)); fi done

script:
  - echo "== RUN DOCKER IN PRIV MODE: ${DOCKER_CMD_PRIV_OPT}"
  - if [ "${single}" = "1" ]; then
        ROLES="$( for d in $(/bin/ls roles/); do if [ -d roles/${d} ]; then echo $d; fi done | grep -vE '*-meta$' | sort -R )";
        TOTAL="$( echo "${ROLES}" | wc -l )";
        START=1;
        for r in ${ROLES}; do
            printf "========== Run %s / %s (%s) ==========\n" "${START}" "${TOTAL}" "${r}";
            max=10; i=0; while [ $i -lt $max ]; do
                if docker run --rm ${DOCKER_CMD_PRIV_OPT} -e FORCE_SYSCTL_RELOAD=false -e verbose=3 -e MY_HOST=${dist} -e tag=${r} -t ansible-debian; then
                    break;
                else
                    i=$((i+1));
                fi;
            done;
            if [ $i -gt 8 ]; then false; fi;
            START=$((START+1));
        done;
    else
        docker run --rm ${DOCKER_CMD_PRIV_OPT} -e FORCE_SYSCTL_RELOAD=false -e verbose=3 -e MY_HOST=${dist} -e random=${random} -t ansible-debian;
    fi

  - docker system prune -f

